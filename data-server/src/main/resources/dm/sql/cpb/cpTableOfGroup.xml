<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
PUBLIC "-//iBATIS.com//DTD SQL Map 2.0//EN"
"../../mybatis-3-mapper.dtd">
<mapper namespace="dyna.common.dtomapper.configparamter.TableOfGroupMapper">

    <select id="selectGNumberList" parameterType="map" resultType="dyna.common.bean.data.configparamter.TableOfGroup">
        select *
          from MA_CONFIG_TABLE_G a
        <where>
            <if test="RELEASETIME!=null">
                and #RELEASETIME:TIMESTAMP# >= a.releasetime
                and (a.obsoletetime is null or #RELEASETIME:TIMESTAMP# <![CDATA[ < ]]> a.obsoletetime)
            </if>
            <if test="RELEASETIME==null">
                <if test="STATUS==null">
                    and a.hasnextrevision = 'N'
                </if>
                <if test="STATUS == 'RLS'">
                    and a.releasetime is not null and a.obsoletetime is null
                </if>
                <if test="STATUS != 'RLS'">
                    and a.hasnextrevision = 'N'
                </if>
            </if>
            <if test="GNUMBER!=null and GNUMBER != ''" >
                and a.gnumber = #GNUMBER#
            </if>
            <if test="SN != null and SN != ''">
                and a.sn = #SN#
            </if>
            and a.masterguid = #MASTERGUID#
        </where>
       order by gnumber
    </select>
    
    <select id="haveRLSData" parameterType="java.lang.String" resultType="dyna.common.bean.data.configparamter.TableOfGroup">
        select case cnt
                 when 0 then 'N'
                 else 'Y'
               end haverls
          from (select count(guid) cnt
		          from MA_CONFIG_TABLE_G
		         where releasetime is not null
		           and masterguid = #MASTERGUID#
		          
               )
    </select>
    
    <select id="isDuplicateSN" parameterType="map" resultType="dyna.common.bean.data.configparamter.TableOfGroup">
		select distinct *
		  from (select 'Y'
		          from ma_config_table_g a
		         where a.sn is not null
				   and a.HASNEXTREVISION = 'N'
		           and a.masterguid = #MASTERGUID#
		         group by a.sn
		        having count(a.sn) > 1
		        union
		        select 'Y'
		          from ma_config_table_g a
		         where a.sn is not null		           
		           and exists (select 1
				                 from ma_config_table_l_group b
				                where a.sn = b.sn
								  and b.HASNEXTREVISION = 'N'
				                  and b.masterguid = #MASTERGUID#)
				   and a.HASNEXTREVISION = 'N'
		           and a.masterguid = #MASTERGUID#
		        union
		        select 'Y'
		          from ma_config_table_g a
		         where a.sn is not null
		           and exists (select 1
				                 from ma_config_table_inputvariable b
				                where a.sn = b.sn
								  and b.HASNEXTREVISION = 'N'
				                  and b.masterguid = #MASTERGUID#)
				   and   a.HASNEXTREVISION = 'N'
		           and a.masterguid = #MASTERGUID#
		      )
    </select>
    
    <insert id="inserBatchList" parameterType="map">
            into MA_CONFIG_TABLE_G(guid, 
                                   masterguid, 
                                   uniquevalue, 
                                   gnumber, 
                                   sn, 
                                   fieldname, 
                                   fieldguid, 
                                   hasnextrevision,
                                   DESCRIPTION,
                                   
                                   CREATEUSERGUID, 
	                               CREATETIME, 
	                               UPDATEUSERGUID, 
	                               UPDATETIME) 
                           values (#GUID#, 
                                   #MASTERGUID#, 
                                   #UNIQUEVALUE#, 
                                   #GNUMBER#, 
                                   #SN#, 
                                   #FIELDNAME#, 
                                   #FIELDGUID#, 
                                   'N',
                                   #DESCRIPTION#,
                                   
                                   #CREATEUSERGUID:VARCHAR:NULL#,
				                   #CURRENTTIME:TIMESTAMP#,
								   #UPDATEUSERGUID:VARCHAR:NULL#,
								   #CURRENTTIME:TIMESTAMP#)
    </insert>
    
    <update id="updateBatchList" parameterType="map">
            update MA_CONFIG_TABLE_G 
               set UPDATEUSERGUID = #UPDATEUSERGUID:VARCHAR:NULL#,
                   UPDATETIME = #CURRENTTIME:TIMESTAMP#,
                   gnumber = #GNUMBER#,
                   SN = #SN#,
                   DESCRIPTION= #DESCRIPTION#
             where guid = #GUID#;
    </update>
    
    <update id="updateNextRevisionBatchList" parameterType="map">
        update MA_CONFIG_TABLE_G 
           set UPDATEUSERGUID = #UPDATEUSERGUID:VARCHAR:NULL#,
               UPDATETIME = #CURRENTTIME:TIMESTAMP#,
               hasnextrevision = 'Y'
         where releasetime is not null 
               and obsoletetime is null
               and guid = #GUID# 
    </update>
    
    <update id="updateCustNextRevisionBatchList" parameterType="map">
            update MA_CONFIG_TABLE_CUSTM_G 
               set UPDATEUSERGUID = #UPDATEUSERGUID:VARCHAR:NULL#,
                   UPDATETIME = #CURRENTTIME:TIMESTAMP#,
                   hasnextrevision = 'Y'
             where releasetime is not null 
               and obsoletetime is null
               and masterfk = #MASTERGUID# 
               and masterguid=#ITEMMASTERGUID# 
    </update>
    
    <delete id="deleteLine" parameterType="java.lang.String">
             delete from MA_CONFIG_TABLE_G  where releasetime is null and guid = #GUID# 
    </delete>
    
    <delete id="deleteCustLine" parameterType="map">
            delete from MA_CONFIG_TABLE_CUSTM_G where releasetime is null and masterfk = #MASTERGUID#  and masterguid=#ITEMMASTERGUID# 
    </delete>
    
    <!-- 根据列名废弃自定义列 -->
    <update id="obsoleteColumnByTitle" parameterType="map">
        update MA_CONFIG_TABLE_CUSTM_G 
           set UPDATEUSERGUID = #UPDATEUSERGUID:VARCHAR:NULL#,
               UPDATETIME = #CURRENTTIME:TIMESTAMP#,
               HASNEXTREVISION = 'Y'
         where releasetime is not null 
           and obsoletetime is null
           and TITLEGUID in
           <foreach collection="TITLELIST" open="(" close=")" separator="," item="TEMP">#TEMP#</foreach>
           and masterguid = #MASTERGUID#
    </update>
    
    <!-- 根据列名删除自定义列 -->
    <delete id="deleteColumnByTitle" parameterType="map">
        delete MA_CONFIG_TABLE_CUSTM_G 
         where releasetime is null
           and TITLEGUID in
           <foreach collection= "TITLELIST" open="(" close=")" separator="," item="TEMP">#TEMP#</foreach>
           and masterguid = #MASTERGUID#
    </delete>
    
    <!-- 删除对象时,同步删除配置数据 -->
    <delete id="deleteByMaster" parameterType="java.lang.String">
            delete from MA_CONFIG_TABLE_G  where masterguid = #MASTERGUID#;
    </delete>
    <delete id="deleteCustByMaster" parameterType="java.lang.String">
            delete from MA_CONFIG_TABLE_CUSTM_G  where masterguid = #MASTERGUID#;
    </delete>
    
    <delete id="deleteInfoByMaster" parameterType="map">
            delete from MA_CONFIG_TABLE_INFO  where masterguid = #MASTERGUID# and tabletype = 'G';
    </delete>
    
        <!-- 删除工作版本对象时,同步删除配置数据 -->
    <update id="clearWIP" parameterType="map">
            update MA_CONFIG_TABLE_G
               set UPDATEUSERGUID = #UPDATEUSERGUID:VARCHAR:NULL#,
                   UPDATETIME = $CURRENTTIME$,
                   hasnextrevision = 'N'
             where hasnextrevision = 'Y' and obsoletetime is null and masterguid = #MASTERGUID#;
    </update>
        <!-- 删除工作版本对象时,同步删除配置数据 -->
    <delete id="deleteWIP" parameterType="java.lang.String">
            delete from MA_CONFIG_TABLE_G  where releasetime is null and masterguid = #MASTERGUID#;
    </delete>
     <!-- 删除工作版本对象时,同步删除配置数据 -->
    <update id="clearCustWIP" parameterType="map">
            update MA_CONFIG_TABLE_CUSTM_G
               set UPDATEUSERGUID = #UPDATEUSERGUID:VARCHAR:NULL#,
                   UPDATETIME = $CURRENTTIME$,
                   hasnextrevision = 'N'
             where hasnextrevision = 'Y' and obsoletetime is null and masterguid = #MASTERGUID#;
    </update>
    <!-- 删除工作版本对象时,同步删除配置数据 -->
    <delete id="deleteCustWIP" parameterType="java.lang.String">
            delete from MA_CONFIG_TABLE_CUSTM_G  where releasetime is null and masterguid = #MASTERGUID#;
    </delete>
    
</mapper>